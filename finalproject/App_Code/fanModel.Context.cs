//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class fEntities : DbContext
{
    public fEntities()
        : base("name=fEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Artist> Artists { get; set; }
    public virtual DbSet<Fan> Fans { get; set; }
    public virtual DbSet<FanLogin> FanLogins { get; set; }
    public virtual DbSet<Show> Shows { get; set; }
    public virtual DbSet<ShowDetail> ShowDetails { get; set; }
    public virtual DbSet<Venue> Venues { get; set; }

    public virtual int usp_FanLogin(string username, string password)
    {
        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));

        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FanLogin", usernameParameter, passwordParameter);
    }

    public virtual int usp_RegisterFan(string fanName, string fanEmail, string fanUsername, string fanPassword)
    {
        var fanNameParameter = fanName != null ?
            new ObjectParameter("FanName", fanName) :
            new ObjectParameter("FanName", typeof(string));

        var fanEmailParameter = fanEmail != null ?
            new ObjectParameter("FanEmail", fanEmail) :
            new ObjectParameter("FanEmail", typeof(string));

        var fanUsernameParameter = fanUsername != null ?
            new ObjectParameter("FanUsername", fanUsername) :
            new ObjectParameter("FanUsername", typeof(string));

        var fanPasswordParameter = fanPassword != null ?
            new ObjectParameter("fanPassword", fanPassword) :
            new ObjectParameter("fanPassword", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegisterFan", fanNameParameter, fanEmailParameter, fanUsernameParameter, fanPasswordParameter);
    }
}
